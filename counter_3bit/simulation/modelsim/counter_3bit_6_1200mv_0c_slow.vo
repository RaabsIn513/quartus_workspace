// Copyright (C) 1991-2011 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 32-bit"
// VERSION "Version 11.1 Build 216 11/23/2011 Service Pack 1 SJ Web Edition"

// DATE "02/05/2012 13:27:01"

// 
// Device: Altera EP3C16F484C6 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module counter_3bit (
	LED0,
	LED1,
	LED2,
	pin_name2,
	cnt_clk_in);
output 	LED0;
output 	LED1;
output 	LED2;
input 	pin_name2;
input 	cnt_clk_in;

// Design Ports Information
// LED0	=>  Location: PIN_J1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LED1	=>  Location: PIN_J2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LED2	=>  Location: PIN_J3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cnt_clk_in	=>  Location: PIN_J6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// pin_name2	=>  Location: PIN_H5,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("counter_3bit_6_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \inst~0_combout ;
wire \LED0~output_o ;
wire \LED1~output_o ;
wire \LED2~output_o ;
wire \cnt_clk_in~input_o ;
wire \inst~feeder_combout ;
wire \pin_name2~input_o ;
wire \inst~q ;
wire \inst1~0_combout ;
wire \inst1~q ;
wire \inst2~0_combout ;
wire \inst2~q ;


// Location: LCCOMB_X1_Y20_N20
cycloneiii_lcell_comb \inst~0 (
// Equation(s):
// \inst~0_combout  = !\inst~q 

	.dataa(gnd),
	.datab(gnd),
	.datac(\inst~q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst~0 .lut_mask = 16'h0F0F;
defparam \inst~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOOBUF_X0_Y20_N9
cycloneiii_io_obuf \LED0~output (
	.i(\inst~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LED0~output_o ),
	.obar());
// synopsys translate_off
defparam \LED0~output .bus_hold = "false";
defparam \LED0~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y20_N2
cycloneiii_io_obuf \LED1~output (
	.i(\inst1~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LED1~output_o ),
	.obar());
// synopsys translate_off
defparam \LED1~output .bus_hold = "false";
defparam \LED1~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y21_N23
cycloneiii_io_obuf \LED2~output (
	.i(\inst2~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LED2~output_o ),
	.obar());
// synopsys translate_off
defparam \LED2~output .bus_hold = "false";
defparam \LED2~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y24_N1
cycloneiii_io_ibuf \cnt_clk_in~input (
	.i(cnt_clk_in),
	.ibar(gnd),
	.o(\cnt_clk_in~input_o ));
// synopsys translate_off
defparam \cnt_clk_in~input .bus_hold = "false";
defparam \cnt_clk_in~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y20_N14
cycloneiii_lcell_comb \inst~feeder (
// Equation(s):
// \inst~feeder_combout  = \inst~0_combout 

	.dataa(\inst~0_combout ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \inst~feeder .lut_mask = 16'hAAAA;
defparam \inst~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y27_N1
cycloneiii_io_ibuf \pin_name2~input (
	.i(pin_name2),
	.ibar(gnd),
	.o(\pin_name2~input_o ));
// synopsys translate_off
defparam \pin_name2~input .bus_hold = "false";
defparam \pin_name2~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X1_Y20_N15
dffeas inst(
	.clk(\cnt_clk_in~input_o ),
	.d(\inst~feeder_combout ),
	.asdata(vcc),
	.clrn(\pin_name2~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst.is_wysiwyg = "true";
defparam inst.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y20_N22
cycloneiii_lcell_comb \inst1~0 (
// Equation(s):
// \inst1~0_combout  = !\inst1~q 

	.dataa(gnd),
	.datab(\inst1~q ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst1~0 .lut_mask = 16'h3333;
defparam \inst1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y20_N1
dffeas inst1(
	.clk(\inst~q ),
	.d(gnd),
	.asdata(\inst1~0_combout ),
	.clrn(\pin_name2~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst1~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst1.is_wysiwyg = "true";
defparam inst1.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y21_N16
cycloneiii_lcell_comb \inst2~0 (
// Equation(s):
// \inst2~0_combout  = !\inst2~q 

	.dataa(gnd),
	.datab(gnd),
	.datac(\inst2~q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2~0 .lut_mask = 16'h0F0F;
defparam \inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y21_N17
dffeas inst2(
	.clk(\inst1~q ),
	.d(\inst2~0_combout ),
	.asdata(vcc),
	.clrn(\pin_name2~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst2~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst2.is_wysiwyg = "true";
defparam inst2.power_up = "low";
// synopsys translate_on

assign LED0 = \LED0~output_o ;

assign LED1 = \LED1~output_o ;

assign LED2 = \LED2~output_o ;

endmodule
