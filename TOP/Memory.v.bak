module Memory( out_data, in_data, address, clk, rst, rw_en);

input [17:0] in_data;					// data going into mem[address]
input clk, rst, rw_en;  				// clock, reset, read/write enable
input [12:0] address;					// the address
output [17:0] out_data;					// data out of mem[addres]
reg [17:0] out_data;
reg [17:0] mem[12:0];				

always @(posedge clk) 
begin
	if(rst) 
		begin
			mem[address] = 18'd0;				// clear that mem address
		end
	else 
		begin
			if( ~rw_en )			// mem read
				begin
					out_data <= mem[address];
				end
			else if( rw_en )	// mem write
				begin
					mem[address] <= in_data;
				end
		end
	end
endmodule
